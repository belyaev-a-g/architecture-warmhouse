package main

import (
    "encoding/json"
    "fmt"
    "log"
    "net/http"
    "time"
)

func main() {
    url := "http://temperature-api:5000/temperature?sensor_id=2"
    //url := "http://localhost:5000/temperature?sensor_id=2"
    fmt.Println("API URL: %s", url)

    var resp *http.Response
    var err error
    
    // –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
    for i := 0; i < 33333; i++ {
        resp, err = http.Get(url)
        if err == nil && resp.StatusCode == http.StatusOK {
            break
        }
        
        if err != nil {
            log.Printf("–ü–æ–ø—ã—Ç–∫–∞ %d: –û—à–∏–±–∫–∞: %v", i+1, err)
        } else {
            log.Printf("–ü–æ–ø—ã—Ç–∫–∞ %d: –ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å: %s", i+1, resp.Status)
            resp.Body.Close()
        }
        
        time.Sleep(2 * time.Second)
    }
    
    if err != nil {
        log.Fatalf("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫: %v", err)
    }
    defer resp.Body.Close()

    // –ü—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Å—ã—Ä–æ–π –æ—Ç–≤–µ—Ç
    var result map[string]interface{}
    json.NewDecoder(resp.Body).Decode(&result)
    
    fmt.Println("üì° –û—Ç–≤–µ—Ç –æ—Ç API:")
    for key, value := range result {
        fmt.Printf("  %s: %v\n", key, value)
    }
}
